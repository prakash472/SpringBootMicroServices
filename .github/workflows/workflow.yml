name: SpringBoot CI/CD Pipeline

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  # PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  # GKE_CLUSTER: springboot-cluster    
  # GKE_ZONE: us-central1-c
  USER_SERVICE: user-service
  ORDER_SERVICE: order-service
  PRODUCT_SERVICE: product-service
  SERVICE_REGISTRY: service_registry
  CLOUD_CONFIG_SERVER: config-server
  API_GATEWAY: api-gateway
  VERSION_NUMBER: 0.0.2

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Building and Pushing User-service
      run: |
          cd user-service && 
          mvn clean install &&
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{DOCKER_PASSWORD}} docker.io &&
          docker build -t prakash472/${{ env.USER_SERVICE }}:${{ env.VERSION_NUMBER }} . &&
          docker push prakash472/${{ env.USER_SERVICE }}:${{ env.VERSION_NUMBER }}

    - name: Building and Pushing Order-service
      run: |
          cd order-service && 
          mvn clean install &&
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{DOCKER_PASSWORD}} docker.io &&
          docker build -t prakash472/${{ env.ORDER_SERVICE }}:${{ env.VERSION_NUMBER }} . &&
          docker push prakash472/${{ env.ORDER_SERVICE }}:${{ env.VERSION_NUMBER }}

    - name: Building and Pushing Product-service
      run: |
          cd product-service &&
          mvn clean install &&
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{DOCKER_PASSWORD}} docker.io &&
          docker build -t prakash472/${{ env.PRODUCT_SERVICE }}:${{ env.VERSION_NUMBER }} . &&
          docker push prakash472/${{ env.PRODUCT_SERVICE }}:${{ env.VERSION_NUMBER }}

    - name: Building and Pushing Cloud Config Service
      run: |
          cd cloud-config-server &&
          mvn clean install &&
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{DOCKER_PASSWORD}} docker.io &&
          docker build -t prakash472/${{ env.CLOUD_CONFIG_SERVER }}:${{ env.VERSION_NUMBER }} . &&
          docker push prakash472/${{ env.CLOUD_CONFIG_SERVER }}:${{ env.VERSION_NUMBER }}

    - name: Build and Pushing Service Registry
      run: |
          cd service-registry &&
          mvn clean install &&
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{DOCKER_PASSWORD}} docker.io &&
          docker build -t prakash472/${{ env.SERVICE_REGISTRY }}:${{ env.VERSION_NUMBER }} . &&
          docker push prakash472/${{ env.SERVICE_REGISTRY }}:${{ env.VERSION_NUMBER }}
      
    - name: Build and Pushing API Gateway
      run: |
          cd api-gateway &&
          mvn clean install &&
          docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{DOCKER_PASSWORD}} docker.io &&
          docker build -t prakash472/${{ env.API_GATEWAY }}:${{ env.VERSION_NUMBER }} . &&
          docker push prakash472/${{ env.API_GATEWAY }}:${{ env.VERSION_NUMBER }}

  # Deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@master
  #   - name: kubectl - Google Cloud GKE cluster.
  #     uses: ameydev/gke-kubectl-action@master
  #     env:
  #       PROJECT_ID: ${{ env.PROJECT_ID }}
  #       APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
  #       CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
  #       ZONE_NAME: ${{ env.GKE_ZONE }}
  #     with:
  #       args: apply -f kubernetes/
